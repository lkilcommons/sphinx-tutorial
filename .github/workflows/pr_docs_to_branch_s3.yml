
# This is a basic workflow to help you get started with Actions

name: Deploy pull-request draft to S3 static site with PR branch name

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}

      - name: Create conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: sphinxtutorial
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: false
          
      # Install the package and build docs
      - name:  Run setup.py
        shell: bash -l {0}
        run: |
          python setup.py install
          sphinx-build docs/source docs/html
      
      #Authenticate with AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      #Create the bucket AWS policy file 
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "policy_template.json"
          json: '{"Version": "2012-10-17","Statement": [{"Sid": "PublicReadGetObject","Effect": "Allow","Principal": "*","Action": ["s3:GetObject"],"Resource": ["arn:aws:s3:::BUCKET/*"]}]}'
      
      #Create bucket
      - name:  Create Bucket
        shell: bash -l {0}
        env:
          BUCKET_NAME_STEM: sphinxtutorials3test
          PR_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        run: |
          BUCKET=$BUCKET_NAME_STEM-$PR_BRANCH_NAME
          aws s3 mb s3://$BUCKET --region us-west-2
          #Define index and error HTML files which will be landing and 4xx error pages
          aws s3 website s3://$BUCKET \
                  --index-document index.html \
                  --error-document error.html
          #Disable safeguards against accidently or via side-effect enabling public access
          aws s3api put-public-access-block \
                  --bucket $BUCKET \
                  --public-access-block-configuration 'BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false'
          #Replace the bucket name placeholder in the policy json file
          cat policy_template.json | sed "s/BUCKET/$BUCKET/g" > policy.json
          #Explictly allow public GET requests via the policy file
          aws s3api put-bucket-policy \
                  --bucket $BUCKET \
                  --policy file://policy.json
      
      # Copy over the website
      - name:  Copy over website
        shell: bash -l {0}
        env:
          BUCKET_NAME_STEM: sphinxtutorials3test
          PR_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        run: |
          BUCKET=$BUCKET_NAME_STEM-$PR_BRANCH_NAME
          aws s3 cp $GITHUB_WORKSPACE/docs/html s3://$BUCKET --recursive
          echo ""
      
      #Report the built URL
      - uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUCKET_NAME_STEM: sphinxtutorials3test
          PR_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        with:
          message: http://${{ env.BUCKET_NAME_STEM }}-${{ env.PR_BRANCH_NAME }}.s3-website.us-west-2.amazonaws.com
          allow-repeats: true
